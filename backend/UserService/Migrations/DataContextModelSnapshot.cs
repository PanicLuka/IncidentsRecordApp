// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using UserService.Entities;

namespace UserService.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.13")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("UserService.Enitites.Permission", b =>
                {
                    b.Property<Guid>("PermissionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AccessPermission")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PermissionId");

                    b.ToTable("Permissions");

                    b.HasData(
                        new
                        {
                            PermissionId = new Guid("552c0e38-a382-4bcd-ab83-0dc7ff887bcc"),
                            AccessPermission = "UserGetAll"
                        },
                        new
                        {
                            PermissionId = new Guid("bee40091-1342-4f28-ab44-fd95fe7f71e3"),
                            AccessPermission = "UserDelete"
                        },
                        new
                        {
                            PermissionId = new Guid("83774e28-705a-431e-a02b-2f94ce8263f8"),
                            AccessPermission = "UserUpdate"
                        },
                        new
                        {
                            PermissionId = new Guid("f56e749a-dfbb-4ff9-b9dd-3f3ea8007138"),
                            AccessPermission = "UserGetById"
                        },
                        new
                        {
                            PermissionId = new Guid("309f3acc-efb7-4330-a6b3-e7b90bb0c690"),
                            AccessPermission = "UserCreateUser"
                        },
                        new
                        {
                            PermissionId = new Guid("eb3e606b-346d-4390-9343-00fa7c1c2133"),
                            AccessPermission = "IncidentsGetAll"
                        },
                        new
                        {
                            PermissionId = new Guid("ae00b7e7-2f17-4cf3-a328-68b67f34fbaf"),
                            AccessPermission = "IncidentsGetById"
                        },
                        new
                        {
                            PermissionId = new Guid("ae44e101-e29b-48c0-9a17-9091e1325b13"),
                            AccessPermission = "IncidentsUpdate"
                        },
                        new
                        {
                            PermissionId = new Guid("1f5619cd-a38c-4eb8-aa13-8488b9995288"),
                            AccessPermission = "IncidentsDelete"
                        },
                        new
                        {
                            PermissionId = new Guid("c4433744-1ffe-49d6-8de7-fd1783737e5d"),
                            AccessPermission = "IncidentsCreate"
                        },
                        new
                        {
                            PermissionId = new Guid("45f50ce6-576b-42a2-8507-1370eeb7ad3a"),
                            AccessPermission = "PromoteToAdmin"
                        });
                });

            modelBuilder.Entity("UserService.Enitites.Role", b =>
                {
                    b.Property<Guid>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("UserType")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RoleId");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            RoleId = new Guid("d8a15fcf-d43e-45cc-a249-9eb0ea1761bc"),
                            UserType = "User"
                        },
                        new
                        {
                            RoleId = new Guid("4f0849fd-5033-4d51-8e07-d5c5db42431c"),
                            UserType = "Admin"
                        });
                });

            modelBuilder.Entity("UserService.Enitites.RolePermission", b =>
                {
                    b.Property<Guid?>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("PermissionId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("RoleId", "PermissionId");

                    b.HasIndex("PermissionId");

                    b.ToTable("RolePermissions");

                    b.HasData(
                        new
                        {
                            RoleId = new Guid("d8a15fcf-d43e-45cc-a249-9eb0ea1761bc"),
                            PermissionId = new Guid("eb3e606b-346d-4390-9343-00fa7c1c2133")
                        },
                        new
                        {
                            RoleId = new Guid("4f0849fd-5033-4d51-8e07-d5c5db42431c"),
                            PermissionId = new Guid("eb3e606b-346d-4390-9343-00fa7c1c2133")
                        },
                        new
                        {
                            RoleId = new Guid("4f0849fd-5033-4d51-8e07-d5c5db42431c"),
                            PermissionId = new Guid("ae00b7e7-2f17-4cf3-a328-68b67f34fbaf")
                        },
                        new
                        {
                            RoleId = new Guid("4f0849fd-5033-4d51-8e07-d5c5db42431c"),
                            PermissionId = new Guid("ae44e101-e29b-48c0-9a17-9091e1325b13")
                        },
                        new
                        {
                            RoleId = new Guid("4f0849fd-5033-4d51-8e07-d5c5db42431c"),
                            PermissionId = new Guid("1f5619cd-a38c-4eb8-aa13-8488b9995288")
                        });
                });

            modelBuilder.Entity("UserService.Enitites.User", b =>
                {
                    b.Property<Guid>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValue(new Guid("d8a15fcf-d43e-45cc-a249-9eb0ea1761bc"));

                    b.HasKey("UserId");

                    b.HasIndex("RoleId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserId = new Guid("ae2799ec-722d-41fb-bba1-748f9e8a782c"),
                            Email = "marko@gmail.com",
                            FirstName = "Marko",
                            LastName = "Milic",
                            Password = "$2a$11$8Qb7PFJdfZ9POWz7su6KoO8S5UtB03oNS/Kr09aixXawFIfEk3LBK",
                            RoleId = new Guid("d8a15fcf-d43e-45cc-a249-9eb0ea1761bc")
                        },
                        new
                        {
                            UserId = new Guid("a4b3ec4a-7707-4569-b209-ffc7137eee4c"),
                            Email = "nikola@gmail.com",
                            FirstName = "Nikola",
                            LastName = "Milic",
                            Password = "$2a$11$JdpVOF8NvoIGkWJ8WmznhuAX/55ZSQojlrg6EnaO4BECVcyaZOYTe",
                            RoleId = new Guid("4f0849fd-5033-4d51-8e07-d5c5db42431c")
                        });
                });

            modelBuilder.Entity("UserService.Enitites.UserPermission", b =>
                {
                    b.Property<Guid?>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("PermissionId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UserId", "PermissionId");

                    b.HasIndex("PermissionId");

                    b.ToTable("UserPermissions");

                    b.HasData(
                        new
                        {
                            UserId = new Guid("ae2799ec-722d-41fb-bba1-748f9e8a782c"),
                            PermissionId = new Guid("1f5619cd-a38c-4eb8-aa13-8488b9995288")
                        },
                        new
                        {
                            UserId = new Guid("a4b3ec4a-7707-4569-b209-ffc7137eee4c"),
                            PermissionId = new Guid("c4433744-1ffe-49d6-8de7-fd1783737e5d")
                        });
                });

            modelBuilder.Entity("UserService.Enitites.RolePermission", b =>
                {
                    b.HasOne("UserService.Enitites.Permission", "Permission")
                        .WithMany()
                        .HasForeignKey("PermissionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("UserService.Enitites.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Permission");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("UserService.Enitites.User", b =>
                {
                    b.HasOne("UserService.Enitites.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("UserService.Enitites.UserPermission", b =>
                {
                    b.HasOne("UserService.Enitites.Permission", "Permission")
                        .WithMany()
                        .HasForeignKey("PermissionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("UserService.Enitites.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Permission");

                    b.Navigation("User");
                });
#pragma warning restore 612, 618
        }
    }
}
