// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using UserService.Entities;

namespace UserService.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20220411141233_UserMigration")]
    partial class UserMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.13")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("UserService.Enitites.Permission", b =>
                {
                    b.Property<Guid>("PermissionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AccessPermission")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PermissionId");

                    b.ToTable("Permissions");

                    b.HasData(
                        new
                        {
                            PermissionId = new Guid("114ea29f-07f2-4448-a9d5-9a13c18f43f6"),
                            AccessPermission = "UserGetAll"
                        },
                        new
                        {
                            PermissionId = new Guid("f268f7b3-a362-4945-84d8-88d7ddce5bdc"),
                            AccessPermission = "UserDelete"
                        },
                        new
                        {
                            PermissionId = new Guid("810c68f3-4405-4f2c-aa5c-0310aa344f7e"),
                            AccessPermission = "UserUpdate"
                        },
                        new
                        {
                            PermissionId = new Guid("fb5ad568-2823-4ff7-83ad-4fd6170ac616"),
                            AccessPermission = "UserGetById"
                        },
                        new
                        {
                            PermissionId = new Guid("47dfae26-ab31-4bd8-8eaf-e697b2007f6e"),
                            AccessPermission = "UserCreateUser"
                        },
                        new
                        {
                            PermissionId = new Guid("b5f48801-8140-41df-941e-586cc221e477"),
                            AccessPermission = "IncidentsGetAll"
                        },
                        new
                        {
                            PermissionId = new Guid("61a94456-07f6-407c-b1ff-0d3032b7482e"),
                            AccessPermission = "IncidentsGetById"
                        },
                        new
                        {
                            PermissionId = new Guid("3a625004-b54f-47ff-ae20-2363f486f353"),
                            AccessPermission = "IncidentsUpdate"
                        },
                        new
                        {
                            PermissionId = new Guid("97fc05bf-4c22-4e5d-8fa2-91a478c1cde1"),
                            AccessPermission = "IncidentsDelete"
                        },
                        new
                        {
                            PermissionId = new Guid("d04348cc-d878-45e0-b7b2-35b35233a99d"),
                            AccessPermission = "IncidentsCreate"
                        },
                        new
                        {
                            PermissionId = new Guid("0e40bba4-6085-4cdc-af56-015402e533ca"),
                            AccessPermission = "PromoteToAdmin"
                        });
                });

            modelBuilder.Entity("UserService.Enitites.Role", b =>
                {
                    b.Property<Guid>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("UserType")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RoleId");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            RoleId = new Guid("16aee3f2-6ee5-4d2b-8ddd-22670af9f38f"),
                            UserType = "User"
                        },
                        new
                        {
                            RoleId = new Guid("501fbb12-98ed-4bfa-af87-e916eab08d11"),
                            UserType = "Admin"
                        });
                });

            modelBuilder.Entity("UserService.Enitites.RolePermission", b =>
                {
                    b.Property<Guid?>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("PermissionId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("RoleId", "PermissionId");

                    b.HasIndex("PermissionId");

                    b.ToTable("RolePermissions");

                    b.HasData(
                        new
                        {
                            RoleId = new Guid("16aee3f2-6ee5-4d2b-8ddd-22670af9f38f"),
                            PermissionId = new Guid("b5f48801-8140-41df-941e-586cc221e477")
                        },
                        new
                        {
                            RoleId = new Guid("501fbb12-98ed-4bfa-af87-e916eab08d11"),
                            PermissionId = new Guid("b5f48801-8140-41df-941e-586cc221e477")
                        },
                        new
                        {
                            RoleId = new Guid("501fbb12-98ed-4bfa-af87-e916eab08d11"),
                            PermissionId = new Guid("61a94456-07f6-407c-b1ff-0d3032b7482e")
                        },
                        new
                        {
                            RoleId = new Guid("501fbb12-98ed-4bfa-af87-e916eab08d11"),
                            PermissionId = new Guid("3a625004-b54f-47ff-ae20-2363f486f353")
                        },
                        new
                        {
                            RoleId = new Guid("501fbb12-98ed-4bfa-af87-e916eab08d11"),
                            PermissionId = new Guid("97fc05bf-4c22-4e5d-8fa2-91a478c1cde1")
                        });
                });

            modelBuilder.Entity("UserService.Enitites.User", b =>
                {
                    b.Property<Guid>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValue(new Guid("16aee3f2-6ee5-4d2b-8ddd-22670af9f38f"));

                    b.HasKey("UserId");

                    b.HasIndex("RoleId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserId = new Guid("ef72df04-f4b6-4d20-8fdd-d02ab10a083d"),
                            Email = "marko@gmail.com",
                            FirstName = "Marko",
                            LastName = "Milic",
                            Password = "123456",
                            RoleId = new Guid("16aee3f2-6ee5-4d2b-8ddd-22670af9f38f")
                        },
                        new
                        {
                            UserId = new Guid("cdc5f80a-97c6-4c1d-a5d4-9cd39e196309"),
                            Email = "Nikola@gmail.com",
                            FirstName = "Nikola",
                            LastName = "Milic",
                            Password = "123456",
                            RoleId = new Guid("501fbb12-98ed-4bfa-af87-e916eab08d11")
                        });
                });

            modelBuilder.Entity("UserService.Enitites.UserPermission", b =>
                {
                    b.Property<Guid?>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("PermissionId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UserId", "PermissionId");

                    b.HasIndex("PermissionId");

                    b.ToTable("UserPermissions");

                    b.HasData(
                        new
                        {
                            UserId = new Guid("ef72df04-f4b6-4d20-8fdd-d02ab10a083d"),
                            PermissionId = new Guid("97fc05bf-4c22-4e5d-8fa2-91a478c1cde1")
                        },
                        new
                        {
                            UserId = new Guid("cdc5f80a-97c6-4c1d-a5d4-9cd39e196309"),
                            PermissionId = new Guid("d04348cc-d878-45e0-b7b2-35b35233a99d")
                        });
                });

            modelBuilder.Entity("UserService.Enitites.RolePermission", b =>
                {
                    b.HasOne("UserService.Enitites.Permission", "Permission")
                        .WithMany()
                        .HasForeignKey("PermissionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("UserService.Enitites.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Permission");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("UserService.Enitites.User", b =>
                {
                    b.HasOne("UserService.Enitites.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("UserService.Enitites.UserPermission", b =>
                {
                    b.HasOne("UserService.Enitites.Permission", "Permission")
                        .WithMany()
                        .HasForeignKey("PermissionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("UserService.Enitites.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Permission");

                    b.Navigation("User");
                });
#pragma warning restore 612, 618
        }
    }
}
